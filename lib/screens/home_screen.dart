import 'package:flutter/material.dart';
import 'package:flutter_shop/services/product_service.dart';
import '../widgets/home_banner.dart';
import '../models/product.dart';
import '../widgets/product_card.dart';
import 'package:carousel_slider/carousel_slider.dart';

class HomeScreen extends StatefulWidget {
  const HomeScreen({super.key});

  @override
  _HomeScreenState createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  final ProductService _productService = ProductService();
  List<Product> _products = [];
  bool _isLoading = true;

  @override
  void initState() {
    super.initState();
    _loadData();
  }

  Future<void> _loadData() async {
    setState(() {
      _isLoading = true;
    });

    try {
      final products = await _productService.fetchProducts();
      // print(products);

      setState(() {
        _products = products;
        _isLoading = false;
      });
    } catch (e) {
      print("Error loading data: $e");
      setState(() {
        _isLoading = false;
      });
      ScaffoldMessenger.of(
        context,
      ).showSnackBar(SnackBar(content: Text('Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu: $e')));
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.pink[50], // üå∏ M√†u n·ªÅn h·ªìng nh·∫π
      appBar: AppBar(
        title: Text(
          "LIRIS'FELORA",
          style: TextStyle(
            fontFamily: 'CrimsonText-Italic', // Font ch·ªØ c√≥ ch√¢n
            fontWeight: FontWeight.w200, // Ch·ªØ m·ªèng
            fontStyle: FontStyle.italic, // Ch·ªØ in nghi√™ng
          ),
        ),
        backgroundColor: Colors.pink, // üå∏ M√†u AppBar
      ),
      body:
          _isLoading
              ? Center(child: CircularProgressIndicator())
              : _products.isEmpty
              ? Center(child: Text('No products available'))
              : SingleChildScrollView(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    HomeBanner(),
                    SizedBox(height: 20),
                    _buildProductCarousel(),
                    SizedBox(height: 20),
                    Padding(
                      padding: const EdgeInsets.symmetric(horizontal: 16.0),
                      child: Text(
                        "New Arrival Items",
                        style: TextStyle(
                          fontSize: 24,
                          fontWeight: FontWeight.bold,
                          color: Colors.pink, // üå∏ M√†u ch·ªØ
                        ),
                      ),
                    ),
                    SizedBox(height: 10),
                    _buildProductGrid(),
                  ],
                ),
              ),
    );
  }

  Widget _buildProductGrid() {
    // Calculate the number of products to display, with a maximum of 9
    final displayCount = _products.length > 9 ? 9 : _products.length;

    return GridView.builder(
      padding: EdgeInsets.all(10),
      shrinkWrap: true, // Allow the grid to take only the space it needs
      physics:
          NeverScrollableScrollPhysics(), // Disable scrolling of the grid itself
      gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
        crossAxisCount: 3,
        crossAxisSpacing: 10,
        mainAxisSpacing: 10,
        childAspectRatio: 0.7, // T·ª∑ l·ªá chi·ªÅu r·ªông/chi·ªÅu cao c·ªßa m·ªói √¥
      ),
      itemCount: displayCount,
      itemBuilder: (context, index) {
        return ProductCard(
          product: _products[index],
          allProducts: _products,
        ); // üõçÔ∏è Hi·ªÉn th·ªã s·∫£n ph·∫©m
      },
    );
  }

  Widget _buildProductCarousel() {
    return CarouselSlider.builder(
      itemCount: _products.length,
      itemBuilder: (context, index, realIndex) {
        return _buildProductCard(_products[index]);
      },
      options: CarouselOptions(
        height: 300.0, // Chi·ªÅu cao c·ªßa carousel
        enlargeCenterPage: true, // T·∫°o hi·ªáu ·ª©ng ph√≥ng to s·∫£n ph·∫©m ·ªü gi·ªØa
        autoPlay: true, // T·ª± ƒë·ªông chuy·ªÉn slide
        aspectRatio: 16 / 9, // T·ª∑ l·ªá hi·ªÉn th·ªã
        viewportFraction:
            0.8, // Hi·ªÉn th·ªã m·ªôt ch√∫t s·∫£n ph·∫©m k·∫ø ti·∫øp ƒë·ªÉ t·∫°o hi·ªáu ·ª©ng cu·ªôn
        scrollPhysics: BouncingScrollPhysics(), // Hi·ªáu ·ª©ng k√©o m∆∞·ª£t m√†
      ),
    );
  }

  Widget _buildProductCard(Product product) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.center,
      children: [
        // ·∫¢nh s·∫£n ph·∫©m v√† t√™n, m√¥ t·∫£ tr√™n ·∫£nh
        Stack(
          children: [
            // H√¨nh ·∫£nh s·∫£n ph·∫©m
            Image.network(
              product.images[0],
              width: 300, // K√≠ch th∆∞·ªõc ·∫£nh
              height: 250, // K√≠ch th∆∞·ªõc ·∫£nh
              fit: BoxFit.cover,
            ),
            // Gradient m·ªù ph√≠a tr√™n ·∫£nh ƒë·ªÉ ch·ªØ r√µ h∆°n
            Container(
              width: 300, // ƒê·∫£m b·∫£o gradient ph·ªß to√†n b·ªô ·∫£nh
              height: 250, // ƒê·∫£m b·∫£o gradient ph·ªß to√†n b·ªô ·∫£nh
              decoration: BoxDecoration(
                gradient: LinearGradient(
                  begin: Alignment.topCenter,
                  end: Alignment.bottomCenter,
                  colors: [
                    Colors.black.withOpacity(0.3), // M·ªù t·ª´ tr√™n
                    Colors.black.withOpacity(0.7),
                  ],
                ),
              ),
            ),
            // T√™n s·∫£n ph·∫©m
            Positioned(
              bottom: 40, // Kho·∫£ng c√°ch t·ª´ d∆∞·ªõi l√™n (t√πy ch·ªânh)
              left: 10,
              right: 10,
              child: Text(
                product.name, // Gi·∫£ s·ª≠ s·∫£n ph·∫©m c√≥ thu·ªôc t√≠nh name
                style: TextStyle(
                  fontSize: 18, // K√≠ch th∆∞·ªõc ch·ªØ cho t√™n s·∫£n ph·∫©m
                  fontWeight: FontWeight.bold,
                  color: Colors.white, // M√†u ch·ªØ tr·∫Øng ƒë·ªÉ n·ªïi b·∫≠t tr√™n n·ªÅn ·∫£nh
                  fontStyle: FontStyle.italic, // Ch·ªØ in nghi√™ng
                ),
                textAlign: TextAlign.center, // CƒÉn gi·ªØa ch·ªØ
              ),
            ),
            // Chi ti·∫øt s·∫£n ph·∫©m
            Positioned(
              bottom: 10, // Kho·∫£ng c√°ch t·ª´ d∆∞·ªõi l√™n (t√πy ch·ªânh)
              left: 10,
              right: 10,
              child: Text(
                product.description,
                style: TextStyle(
                  fontSize: 14,
                  color: Colors.white.withOpacity(0.8), // M√†u ch·ªØ m·ªù m·ªôt ch√∫t
                ),
                textAlign: TextAlign.center, // CƒÉn gi·ªØa ch·ªØ
                maxLines: 2,
                overflow: TextOverflow.ellipsis,
              ),
            ),
          ],
        ),
      ],
    );
  }
}
